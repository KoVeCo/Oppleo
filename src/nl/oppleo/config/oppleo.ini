# CarCharger config file. 

[Oppleo]
activeTarget=TargetMacBookWerk
#activeTarget=TargetMacBookThuis
#activeTarget=TargetMacBookWerk
#activeTarget=TargetDellIlse

# Production uses real data, Development fake data from EnergyDevice
oppleoEnv=Development
#oppleoEnv=Production


[TargetRaspberry]
DATABASE_URL=postgresql://charger:charger@localhost:5432/charger
ENERGY_DEVICE_ID=laadpaal_noord
PYTHONPATH="/home/pi/development/RestfulCharging/src"
SQLALCHEMY_DATABASE_URI=postgresql://charger:charger@localhost:5432/charger
SQLALCHEMY_TRACK_MODIFICATIONS=True
EXPLAIN_TEMPLATE_LOADING=False
SECRET_KEY=(*^&uytwejkfh8tsefukhg23eioHJYseryg(*^5eyt123eiuyowish))!
WTF_CSRF_SECRET_KEY=iw(*&43^%$diuYGef9872(*&*&^*&triourv2r3iouh[p2ojdkjegqrfvuytf3eYTF]oiuhwOIU
HTTP_HOST=0.0.0.0
HTTP_PORT=80
USE_RELOADER=False
FACTOR_WHKM = 162
# Number of seconds between consecutive kwh meter readouts (via modbus). Only changes will be stored in the 
# usage table. Greater values will lead to lagging change detection. Smaller values take more processing.
MODBUS_INTERVAL = 10
# Auto Session starts a new session when the EVSE starts charging and during the set amount of minutes less
# than the amount of energy has been consumed (auto was away)
AUTO_SESSION_ENABLED = True
AUTO_SESSION_MINUTES = 90
AUTO_SESSION_ENERGY = 0.1
# Condenses autyo-generated sessions (after a period of inactivity) if the odometer has not changed.
# Auto-sessions can be generated after the charger was switched off in peak period. Start of off-peak then leads to 
# an incorrectly auto-generated charge-session, while the vehicke actually has not moved.
# This does not condense sessions stopped and started through RFID or WebApp.
AUTO_SESSION_CONDENSE_SAME_ODOMETER = True
# Pulsing LED values
PULSE_LED_MIN = 3
PULSE_LED_MAX = 98
# GPIO MODE - BCM or BOARD (BCM is more future proof/ less direct hardware related)
GPIO_MODE = BCM
# Raspberry PINs - RGB LEDs
PIN_LED_RED = 13
PIN_LED_GREEN = 12
PIN_LED_BLUE = 16
# Raspberry PINs - Buzzer - PIN 16/ GPIO23
PIN_BUZZER = 23 
# Enable Off Peak hours configured in the database
PEAK_HOURS_OFF_PEAK_ENABLED = True


[TargetMacBookThuis]
DATABASE_URL=postgresql://charger:charger@10.0.1.160:5432/charger
oppleo_ENV=Development
ENERGY_DEVICE_ID=laadpaal_noord
PYTHONPATH="/Users/frans/Projects//RestfulCharging/src"
SQLALCHEMY_DATABASE_URI = ${TargetMacBookThuis:DATABASE_URL}
SQLALCHEMY_TRACK_MODIFICATIONS = True
EXPLAIN_TEMPLATE_LOADING = False
SECRET_KEY = (*^&uytwejkfh8tsefukhg23eioHJYseryg(*^5eyt123eiuyowish))!
WTF_CSRF_SECRET_KEY = iw(*&43^%$diuYGef9872(*&*&^*&triourv2r3iouh[p2ojdkjegqrfvuytf3eYTF]oiuhwOIU
HTTP_HOST=0.0.0.0
HTTP_PORT=5000
USE_RELOADER=False
FACTOR_WHKM = 162
# Number of seconds between consecutive kwh meter readouts (via modbus). Only changes will be stored in the 
# usage table. Greater values will lead to lagging change detection. Smaller values take more processing.
MODBUS_INTERVAL = 10
# Auto Session starts a new session when the EVSE starts charging and during the set amount of minutes less
# than the amount of energy has been consumed (auto was away)
AUTO_SESSION_ENABLED = True
AUTO_SESSION_MINUTES = 90
AUTO_SESSION_ENERGY = 0.1
# Condenses autyo-generated sessions (after a period of inactivity) if the odometer has not changed.
# Auto-sessions can be generated after the charger was switched off in peak period. Start of off-peak then leads to 
# an incorrectly auto-generated charge-session, while the vehicke actually has not moved.
# This does not condense sessions stopped and started through RFID or WebApp.
AUTO_SESSION_CONDENSE_SAME_ODOMETER = True
# Pulsing LED values
PULSE_LED_MIN = 3
PULSE_LED_MAX = 98
# GPIO MODE - BCM or BOARD (BCM is more future proof/ less direct hardware related)
GPIO_MODE = BCM
# Raspberry PINs - RGB LEDs
PIN_LED_RED = 13
PIN_LED_GREEN = 12
PIN_LED_BLUE = 16
# Raspberry PINs - Buzzer - PIN 16/ GPIO23
PIN_BUZZER = 23 
# Enable Off Peak hours configured in the database
PEAK_HOURS_OFF_PEAK_ENABLED = True


[TargetMacBookWerk]
DATABASE_URL=postgresql://charger:charger@10.0.1.160:5432/charger
oppleo_ENV=Development
ENERGY_DEVICE_ID=laadpaal_noord
PYTHONPATH="/Users/laeme498/Projects//RestfulCharging/src"
SQLALCHEMY_DATABASE_URI = ${TargetMacBookWerk:DATABASE_URL}
SQLALCHEMY_TRACK_MODIFICATIONS = True
EXPLAIN_TEMPLATE_LOADING = False
SECRET_KEY = (*^&uytwejkfh8tsefukhg23eioHJYseryg(*^5eyt123eiuyowish))!
WTF_CSRF_SECRET_KEY = iw(*&43^%$diuYGef9872(*&*&^*&triourv2r3iouh[p2ojdkjegqrfvuytf3eYTF]oiuhwOIU
HTTP_HOST=0.0.0.0
HTTP_PORT=5000
USE_RELOADER=False
FACTOR_WHKM = 162
# Number of seconds between consecutive kwh meter readouts (via modbus). Only changes will be stored in the 
# usage table. Greater values will lead to lagging change detection. Smaller values take more processing.
MODBUS_INTERVAL = 10
# Auto Session starts a new session when the EVSE starts charging and during the set amount of minutes less
# than the amount of energy has been consumed (auto was away)
AUTO_SESSION_ENABLED = True
AUTO_SESSION_MINUTES = 90
AUTO_SESSION_ENERGY = 0.1
# Condenses autyo-generated sessions (after a period of inactivity) if the odometer has not changed.
# Auto-sessions can be generated after the charger was switched off in peak period. Start of off-peak then leads to 
# an incorrectly auto-generated charge-session, while the vehicke actually has not moved.
# This does not condense sessions stopped and started through RFID or WebApp.
AUTO_SESSION_CONDENSE_SAME_ODOMETER = True
# Pulsing LED values
PULSE_LED_MIN = 3
PULSE_LED_MAX = 98
# GPIO MODE - BCM or BOARD (BCM is more future proof/ less direct hardware related)
GPIO_MODE = BCM
# Raspberry PINs - RGB LEDs
PIN_LED_RED = 13
PIN_LED_GREEN = 12
PIN_LED_BLUE = 16
# Raspberry PINs - Buzzer - PIN 16/ GPIO23
PIN_BUZZER = 23 
# Enable Off Peak hours configured in the database
PEAK_HOURS_OFF_PEAK_ENABLED = True


[TargetDellIlse]
DATABASE_URL=postgresql://charger:charger@localhost:5432/charger
oppleo_ENV=Development
ENERGY_DEVICE_ID=laadpaal_noord
PYTHONPATH="/Users/laeme498/Projects//RestfulCharging/src"
SQLALCHEMY_DATABASE_URI = ${TargetDellIlse:DATABASE_URL}
SQLALCHEMY_TRACK_MODIFICATIONS = True
EXPLAIN_TEMPLATE_LOADING = False
SECRET_KEY = (*^&uytwejkfh8tsefukhg23eioHJYseryg(*^5eyt123eiuyowish))!
WTF_CSRF_SECRET_KEY = iw(*&43^%$diuYGef9872(*&*&^*&triourv2r3iouh[p2ojdkjegqrfvuytf3eYTF]oiuhwOIU
HTTP_HOST=0.0.0.0
HTTP_PORT=5000
USE_RELOADER=False
FACTOR_WHKM = 162
# Number of seconds between consecutive kwh meter readouts (via modbus). Only changes will be stored in the 
# usage table. Greater values will lead to lagging change detection. Smaller values take more processing.
MODBUS_INTERVAL = 10
# Auto Session starts a new session when the EVSE starts charging and during the set amount of minutes less
# than the amount of energy has been consumed (auto was away)
AUTO_SESSION_ENABLED = True
AUTO_SESSION_MINUTES = 90
AUTO_SESSION_ENERGY = 0.1
# Condenses autyo-generated sessions (after a period of inactivity) if the odometer has not changed.
# Auto-sessions can be generated after the charger was switched off in peak period. Start of off-peak then leads to 
# an incorrectly auto-generated charge-session, while the vehicke actually has not moved.
# This does not condense sessions stopped and started through RFID or WebApp.
AUTO_SESSION_CONDENSE_SAME_ODOMETER = True
# Pulsing LED values
PULSE_LED_MIN = 3
PULSE_LED_MAX = 98
# GPIO MODE - BCM or BOARD (BCM is more future proof/ less direct hardware related)
GPIO_MODE = BCM
# Raspberry PINs - RGB LEDs
PIN_LED_RED = 13
PIN_LED_GREEN = 12
PIN_LED_BLUE = 16
# Raspberry PINs - Buzzer - PIN 16/ GPIO23
PIN_BUZZER = 23 
# Enable Off Peak hours configured in the database
PEAK_HOURS_OFF_PEAK_ENABLED = True


[Production]
DEBUG = False
TESTING = False


[Development]
DEBUG = True
TESTING = False

